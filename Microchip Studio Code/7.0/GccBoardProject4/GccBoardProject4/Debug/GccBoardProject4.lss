
GccBoardProject4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001e  00800100  000007b2  00000826  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000007b2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  00000844  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000008a0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000048  00000000  00000000  000008e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000099d  00000000  00000000  00000928  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007cb  00000000  00000000  000012c5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000056b  00000000  00000000  00001a90  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000090  00000000  00000000  00001ffc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00007380  00000000  00000000  0000208c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000023a  00000000  00000000  0000940c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000038  00000000  00000000  00009646  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00000448  00000000  00000000  0000967e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	33 c0       	rjmp	.+102    	; 0x68 <__ctors_end>
   2:	00 00       	nop
   4:	44 c0       	rjmp	.+136    	; 0x8e <__bad_interrupt>
   6:	00 00       	nop
   8:	42 c0       	rjmp	.+132    	; 0x8e <__bad_interrupt>
   a:	00 00       	nop
   c:	40 c0       	rjmp	.+128    	; 0x8e <__bad_interrupt>
   e:	00 00       	nop
  10:	3e c0       	rjmp	.+124    	; 0x8e <__bad_interrupt>
  12:	00 00       	nop
  14:	3c c0       	rjmp	.+120    	; 0x8e <__bad_interrupt>
  16:	00 00       	nop
  18:	3a c0       	rjmp	.+116    	; 0x8e <__bad_interrupt>
  1a:	00 00       	nop
  1c:	38 c0       	rjmp	.+112    	; 0x8e <__bad_interrupt>
  1e:	00 00       	nop
  20:	36 c0       	rjmp	.+108    	; 0x8e <__bad_interrupt>
  22:	00 00       	nop
  24:	34 c0       	rjmp	.+104    	; 0x8e <__bad_interrupt>
  26:	00 00       	nop
  28:	32 c0       	rjmp	.+100    	; 0x8e <__bad_interrupt>
  2a:	00 00       	nop
  2c:	30 c0       	rjmp	.+96     	; 0x8e <__bad_interrupt>
  2e:	00 00       	nop
  30:	2e c0       	rjmp	.+92     	; 0x8e <__bad_interrupt>
  32:	00 00       	nop
  34:	2c c0       	rjmp	.+88     	; 0x8e <__bad_interrupt>
  36:	00 00       	nop
  38:	2a c0       	rjmp	.+84     	; 0x8e <__bad_interrupt>
  3a:	00 00       	nop
  3c:	28 c0       	rjmp	.+80     	; 0x8e <__bad_interrupt>
  3e:	00 00       	nop
  40:	26 c0       	rjmp	.+76     	; 0x8e <__bad_interrupt>
  42:	00 00       	nop
  44:	24 c0       	rjmp	.+72     	; 0x8e <__bad_interrupt>
  46:	00 00       	nop
  48:	22 c0       	rjmp	.+68     	; 0x8e <__bad_interrupt>
  4a:	00 00       	nop
  4c:	20 c0       	rjmp	.+64     	; 0x8e <__bad_interrupt>
  4e:	00 00       	nop
  50:	1e c0       	rjmp	.+60     	; 0x8e <__bad_interrupt>
  52:	00 00       	nop
  54:	1c c0       	rjmp	.+56     	; 0x8e <__bad_interrupt>
  56:	00 00       	nop
  58:	1a c0       	rjmp	.+52     	; 0x8e <__bad_interrupt>
  5a:	00 00       	nop
  5c:	18 c0       	rjmp	.+48     	; 0x8e <__bad_interrupt>
  5e:	00 00       	nop
  60:	16 c0       	rjmp	.+44     	; 0x8e <__bad_interrupt>
  62:	00 00       	nop
  64:	14 c0       	rjmp	.+40     	; 0x8e <__bad_interrupt>
	...

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e2 eb       	ldi	r30, 0xB2	; 178
  7c:	f7 e0       	ldi	r31, 0x07	; 7
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ae 31       	cpi	r26, 0x1E	; 30
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	41 d0       	rcall	.+130    	; 0x10e <main>
  8c:	90 c3       	rjmp	.+1824   	; 0x7ae <_exit>

0000008e <__bad_interrupt>:
  8e:	b8 cf       	rjmp	.-144    	; 0x0 <__vectors>

00000090 <uart_init>:
void init_hx711_pins(void);
uint32_t read_hx711(void);

void uart_init(unsigned int ubrr) {
	// Set baud rate
	UBRR0H = (unsigned char)(ubrr >> 8);
  90:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = (unsigned char)ubrr;
  94:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	// Enable transmitter
	UCSR0B = (1 << TXEN0);
  98:	88 e0       	ldi	r24, 0x08	; 8
  9a:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
	// Set frame format: 8 data bits, 1 stop bit, no parity
	UCSR0C = (1 << UCSZ01) | (1 << UCSZ00);
  9e:	86 e0       	ldi	r24, 0x06	; 6
  a0:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
  a4:	08 95       	ret

000000a6 <uart_transmit>:
}

void uart_transmit(unsigned char data) {
	// Wait for empty transmit buffer
	while (!(UCSR0A & (1 << UDRE0)));
  a6:	e0 ec       	ldi	r30, 0xC0	; 192
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	90 81       	ld	r25, Z
  ac:	95 ff       	sbrs	r25, 5
  ae:	fd cf       	rjmp	.-6      	; 0xaa <uart_transmit+0x4>
	// Put data into buffer, sends the data
	UDR0 = data;
  b0:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
  b4:	08 95       	ret

000000b6 <uart_transmit_string>:
}

void uart_transmit_string(const char* str) {
  b6:	cf 93       	push	r28
  b8:	df 93       	push	r29
  ba:	ec 01       	movw	r28, r24
	while (*str) {
  bc:	88 81       	ld	r24, Y
  be:	88 23       	and	r24, r24
  c0:	29 f0       	breq	.+10     	; 0xcc <uart_transmit_string+0x16>
  c2:	21 96       	adiw	r28, 0x01	; 1
		uart_transmit(*str++);
  c4:	f0 df       	rcall	.-32     	; 0xa6 <uart_transmit>
	// Put data into buffer, sends the data
	UDR0 = data;
}

void uart_transmit_string(const char* str) {
	while (*str) {
  c6:	89 91       	ld	r24, Y+
  c8:	81 11       	cpse	r24, r1
  ca:	fc cf       	rjmp	.-8      	; 0xc4 <uart_transmit_string+0xe>
		uart_transmit(*str++);
	}
}
  cc:	df 91       	pop	r29
  ce:	cf 91       	pop	r28
  d0:	08 95       	ret

000000d2 <init_hx711_pins>:

void init_hx711_pins(void) {
	DDRD &= ~(1 << DOUT);  // Set DOUT (PD6) as input
  d2:	56 98       	cbi	0x0a, 6	; 10
	DDRD |= (1 << SCK);    // Set SCK (PD7) as output
  d4:	57 9a       	sbi	0x0a, 7	; 10
	PORTD &= ~(1 << SCK);  // Initialize SCK to low
  d6:	5f 98       	cbi	0x0b, 7	; 11
  d8:	08 95       	ret

000000da <read_hx711>:

uint32_t read_hx711(void) {
	uint32_t count = 0;

	// Wait for the HX711 to be ready (DOUT to go low)
	while (PIND & (1 << DOUT));
  da:	4e 99       	sbic	0x09, 6	; 9
  dc:	fe cf       	rjmp	.-4      	; 0xda <read_hx711>
  de:	28 e1       	ldi	r18, 0x18	; 24
  e0:	80 e0       	ldi	r24, 0x00	; 0
  e2:	90 e0       	ldi	r25, 0x00	; 0
  e4:	dc 01       	movw	r26, r24

	// Read 24-bit data
	for (uint8_t i = 0; i < 24; i++) {
		PORTD |= (1 << SCK);         // Set SCK high
  e6:	5f 9a       	sbi	0x0b, 7	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  e8:	00 00       	nop
		_delay_us(1);                // Short delay for stable clock
		count = count << 1;          // Shift count to the left
  ea:	88 0f       	add	r24, r24
  ec:	99 1f       	adc	r25, r25
  ee:	aa 1f       	adc	r26, r26
  f0:	bb 1f       	adc	r27, r27
		PORTD &= ~(1 << SCK);        // Set SCK low
  f2:	5f 98       	cbi	0x0b, 7	; 11
		if (PIND & (1 << DOUT)) {    // If DOUT is high
  f4:	4e 9b       	sbis	0x09, 6	; 9
  f6:	03 c0       	rjmp	.+6      	; 0xfe <read_hx711+0x24>
			count++;                 // Increment count
  f8:	01 96       	adiw	r24, 0x01	; 1
  fa:	a1 1d       	adc	r26, r1
  fc:	b1 1d       	adc	r27, r1
  fe:	21 50       	subi	r18, 0x01	; 1

	// Wait for the HX711 to be ready (DOUT to go low)
	while (PIND & (1 << DOUT));

	// Read 24-bit data
	for (uint8_t i = 0; i < 24; i++) {
 100:	91 f7       	brne	.-28     	; 0xe6 <read_hx711+0xc>
			count++;                 // Increment count
		}
	}

	// Set the gain to 128 by providing one more clock pulse
	PORTD |= (1 << SCK);  // Set SCK high
 102:	5f 9a       	sbi	0x0b, 7	; 11
 104:	00 00       	nop
	_delay_us(1);         // Short delay
	PORTD &= ~(1 << SCK); // Set SCK low
 106:	5f 98       	cbi	0x0b, 7	; 11

	// Return the 24-bit data as a 32-bit value
	return count;
}
 108:	bc 01       	movw	r22, r24
 10a:	cd 01       	movw	r24, r26
 10c:	08 95       	ret

0000010e <main>:

int main(void) {
 10e:	cf 93       	push	r28
 110:	df 93       	push	r29
 112:	cd b7       	in	r28, 0x3d	; 61
 114:	de b7       	in	r29, 0x3e	; 62
 116:	6e 97       	sbiw	r28, 0x1e	; 30
 118:	0f b6       	in	r0, 0x3f	; 63
 11a:	f8 94       	cli
 11c:	de bf       	out	0x3e, r29	; 62
 11e:	0f be       	out	0x3f, r0	; 63
 120:	cd bf       	out	0x3d, r28	; 61
	uart_init(MYUBRR);    // Initialize UART
 122:	87 e6       	ldi	r24, 0x67	; 103
 124:	90 e0       	ldi	r25, 0x00	; 0
 126:	b4 df       	rcall	.-152    	; 0x90 <uart_init>
	init_hx711_pins();    // Initialize HX711 pins
 128:	d4 df       	rcall	.-88     	; 0xd2 <init_hx711_pins>
 12a:	41 2c       	mov	r4, r1

	uint32_t previous_weight = 0;  // Variable to store the previous weight reading
 12c:	51 2c       	mov	r5, r1
 12e:	32 01       	movw	r6, r4
 130:	0f 2e       	mov	r0, r31
		// Check if the difference is positive or negative and print accordingly
		if (weight_difference > 100000) {
			snprintf(buffer, sizeof(buffer), "positive: %ld\n", weight_difference);
			uart_transmit_string(buffer);
			} else if (weight_difference < -100000) {
			snprintf(buffer, sizeof(buffer), "negative: %ld\n", weight_difference);
 132:	ff e0       	ldi	r31, 0x0F	; 15
 134:	8f 2e       	mov	r8, r31
 136:	f1 e0       	ldi	r31, 0x01	; 1
 138:	9f 2e       	mov	r9, r31
 13a:	f0 2d       	mov	r31, r0
 13c:	0f 2e       	mov	r0, r31
 13e:	fe e1       	ldi	r31, 0x1E	; 30
 140:	3f 2e       	mov	r3, r31
 142:	f0 2d       	mov	r31, r0
 144:	8e 01       	movw	r16, r28
 146:	0f 5f       	subi	r16, 0xFF	; 255
 148:	1f 4f       	sbci	r17, 0xFF	; 255
 14a:	0f 2e       	mov	r0, r31

		// Convert weight difference to a string and transmit via UART
		char buffer[30];
		// Check if the difference is positive or negative and print accordingly
		if (weight_difference > 100000) {
			snprintf(buffer, sizeof(buffer), "positive: %ld\n", weight_difference);
 14c:	f0 e0       	ldi	r31, 0x00	; 0
 14e:	af 2e       	mov	r10, r31
 150:	f1 e0       	ldi	r31, 0x01	; 1
 152:	bf 2e       	mov	r11, r31
 154:	f0 2d       	mov	r31, r0
	init_hx711_pins();    // Initialize HX711 pins

	uint32_t previous_weight = 0;  // Variable to store the previous weight reading

	while (1) {
		uint32_t current_weight = read_hx711();  // Read weight from HX711
 156:	c1 df       	rcall	.-126    	; 0xda <read_hx711>
 158:	6b 01       	movw	r12, r22
 15a:	7c 01       	movw	r14, r24
 15c:	dc 01       	movw	r26, r24
		int32_t weight_difference = current_weight - previous_weight;  // Calculate the difference
 15e:	cb 01       	movw	r24, r22
 160:	84 19       	sub	r24, r4
 162:	95 09       	sbc	r25, r5
 164:	a6 09       	sbc	r26, r6
 166:	b7 09       	sbc	r27, r7
 168:	81 3a       	cpi	r24, 0xA1	; 161

		// Convert weight difference to a string and transmit via UART
		char buffer[30];
		// Check if the difference is positive or negative and print accordingly
		if (weight_difference > 100000) {
 16a:	26 e8       	ldi	r18, 0x86	; 134
 16c:	92 07       	cpc	r25, r18
 16e:	21 e0       	ldi	r18, 0x01	; 1
 170:	a2 07       	cpc	r26, r18
 172:	b1 05       	cpc	r27, r1
 174:	9c f0       	brlt	.+38     	; 0x19c <main+0x8e>
 176:	bf 93       	push	r27
			snprintf(buffer, sizeof(buffer), "positive: %ld\n", weight_difference);
 178:	af 93       	push	r26
 17a:	9f 93       	push	r25
 17c:	8f 93       	push	r24
 17e:	bf 92       	push	r11
 180:	af 92       	push	r10
 182:	1f 92       	push	r1
 184:	3f 92       	push	r3
 186:	1f 93       	push	r17
 188:	0f 93       	push	r16
 18a:	2b d0       	rcall	.+86     	; 0x1e2 <snprintf>
			uart_transmit_string(buffer);
 18c:	c8 01       	movw	r24, r16
 18e:	93 df       	rcall	.-218    	; 0xb6 <uart_transmit_string>
 190:	0f b6       	in	r0, 0x3f	; 63
 192:	f8 94       	cli
 194:	de bf       	out	0x3e, r29	; 62
 196:	0f be       	out	0x3f, r0	; 63
 198:	cd bf       	out	0x3d, r28	; 61
 19a:	1a c0       	rjmp	.+52     	; 0x1d0 <main+0xc2>
 19c:	80 36       	cpi	r24, 0x60	; 96
			} else if (weight_difference < -100000) {
 19e:	29 e7       	ldi	r18, 0x79	; 121
 1a0:	92 07       	cpc	r25, r18
 1a2:	2e ef       	ldi	r18, 0xFE	; 254
 1a4:	a2 07       	cpc	r26, r18
 1a6:	2f ef       	ldi	r18, 0xFF	; 255
 1a8:	b2 07       	cpc	r27, r18
 1aa:	94 f4       	brge	.+36     	; 0x1d0 <main+0xc2>
 1ac:	bf 93       	push	r27
			snprintf(buffer, sizeof(buffer), "negative: %ld\n", weight_difference);
 1ae:	af 93       	push	r26
 1b0:	9f 93       	push	r25
 1b2:	8f 93       	push	r24
 1b4:	9f 92       	push	r9
 1b6:	8f 92       	push	r8
 1b8:	1f 92       	push	r1
 1ba:	3f 92       	push	r3
 1bc:	1f 93       	push	r17
 1be:	0f 93       	push	r16
 1c0:	10 d0       	rcall	.+32     	; 0x1e2 <snprintf>
			uart_transmit_string(buffer);
 1c2:	c8 01       	movw	r24, r16
 1c4:	78 df       	rcall	.-272    	; 0xb6 <uart_transmit_string>
 1c6:	0f b6       	in	r0, 0x3f	; 63
 1c8:	f8 94       	cli
 1ca:	de bf       	out	0x3e, r29	; 62
 1cc:	0f be       	out	0x3f, r0	; 63
 1ce:	cd bf       	out	0x3d, r28	; 61
 1d0:	87 ea       	ldi	r24, 0xA7	; 167
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1d2:	91 e6       	ldi	r25, 0x61	; 97
 1d4:	01 97       	sbiw	r24, 0x01	; 1
 1d6:	f1 f7       	brne	.-4      	; 0x1d4 <main+0xc6>
 1d8:	00 c0       	rjmp	.+0      	; 0x1da <main+0xcc>
 1da:	00 00       	nop
 1dc:	26 01       	movw	r4, r12
		}


		previous_weight = current_weight;  // Update the previous weight
 1de:	37 01       	movw	r6, r14
 1e0:	ba cf       	rjmp	.-140    	; 0x156 <main+0x48>

000001e2 <snprintf>:

		_delay_ms(100);  // Wait for 100ms before the next reading
	}
 1e2:	ae e0       	ldi	r26, 0x0E	; 14
 1e4:	b0 e0       	ldi	r27, 0x00	; 0
 1e6:	e6 ef       	ldi	r30, 0xF6	; 246
 1e8:	f0 e0       	ldi	r31, 0x00	; 0
 1ea:	b8 c2       	rjmp	.+1392   	; 0x75c <__prologue_saves__+0x1c>
 1ec:	0d 89       	ldd	r16, Y+21	; 0x15
 1ee:	1e 89       	ldd	r17, Y+22	; 0x16
 1f0:	8f 89       	ldd	r24, Y+23	; 0x17
 1f2:	98 8d       	ldd	r25, Y+24	; 0x18
 1f4:	26 e0       	ldi	r18, 0x06	; 6
 1f6:	2c 83       	std	Y+4, r18	; 0x04
 1f8:	1a 83       	std	Y+2, r17	; 0x02
 1fa:	09 83       	std	Y+1, r16	; 0x01
 1fc:	97 ff       	sbrs	r25, 7
 1fe:	02 c0       	rjmp	.+4      	; 0x204 <snprintf+0x22>
 200:	80 e0       	ldi	r24, 0x00	; 0
 202:	90 e8       	ldi	r25, 0x80	; 128
 204:	01 97       	sbiw	r24, 0x01	; 1
 206:	9e 83       	std	Y+6, r25	; 0x06
 208:	8d 83       	std	Y+5, r24	; 0x05
 20a:	ae 01       	movw	r20, r28
 20c:	45 5e       	subi	r20, 0xE5	; 229
 20e:	5f 4f       	sbci	r21, 0xFF	; 255
 210:	69 8d       	ldd	r22, Y+25	; 0x19
 212:	7a 8d       	ldd	r23, Y+26	; 0x1a
 214:	ce 01       	movw	r24, r28
 216:	01 96       	adiw	r24, 0x01	; 1
 218:	11 d0       	rcall	.+34     	; 0x23c <vfprintf>
 21a:	4d 81       	ldd	r20, Y+5	; 0x05
 21c:	5e 81       	ldd	r21, Y+6	; 0x06
 21e:	57 fd       	sbrc	r21, 7
 220:	0a c0       	rjmp	.+20     	; 0x236 <snprintf+0x54>
 222:	2f 81       	ldd	r18, Y+7	; 0x07
 224:	38 85       	ldd	r19, Y+8	; 0x08
 226:	42 17       	cp	r20, r18
 228:	53 07       	cpc	r21, r19
 22a:	0c f4       	brge	.+2      	; 0x22e <snprintf+0x4c>
 22c:	9a 01       	movw	r18, r20
 22e:	f8 01       	movw	r30, r16
 230:	e2 0f       	add	r30, r18
 232:	f3 1f       	adc	r31, r19
 234:	10 82       	st	Z, r1
 236:	2e 96       	adiw	r28, 0x0e	; 14
 238:	e4 e0       	ldi	r30, 0x04	; 4
 23a:	ac c2       	rjmp	.+1368   	; 0x794 <__epilogue_restores__+0x1c>

0000023c <vfprintf>:
 23c:	ab e0       	ldi	r26, 0x0B	; 11
 23e:	b0 e0       	ldi	r27, 0x00	; 0
 240:	e3 e2       	ldi	r30, 0x23	; 35
 242:	f1 e0       	ldi	r31, 0x01	; 1
 244:	7d c2       	rjmp	.+1274   	; 0x740 <__prologue_saves__>
 246:	6c 01       	movw	r12, r24
 248:	7b 01       	movw	r14, r22
 24a:	8a 01       	movw	r16, r20
 24c:	fc 01       	movw	r30, r24
 24e:	17 82       	std	Z+7, r1	; 0x07
 250:	16 82       	std	Z+6, r1	; 0x06
 252:	83 81       	ldd	r24, Z+3	; 0x03
 254:	81 ff       	sbrs	r24, 1
 256:	bf c1       	rjmp	.+894    	; 0x5d6 <__EEPROM_REGION_LENGTH__+0x1d6>
 258:	ce 01       	movw	r24, r28
 25a:	01 96       	adiw	r24, 0x01	; 1
 25c:	3c 01       	movw	r6, r24
 25e:	f6 01       	movw	r30, r12
 260:	93 81       	ldd	r25, Z+3	; 0x03
 262:	f7 01       	movw	r30, r14
 264:	93 fd       	sbrc	r25, 3
 266:	85 91       	lpm	r24, Z+
 268:	93 ff       	sbrs	r25, 3
 26a:	81 91       	ld	r24, Z+
 26c:	7f 01       	movw	r14, r30
 26e:	88 23       	and	r24, r24
 270:	09 f4       	brne	.+2      	; 0x274 <vfprintf+0x38>
 272:	ad c1       	rjmp	.+858    	; 0x5ce <__EEPROM_REGION_LENGTH__+0x1ce>
 274:	85 32       	cpi	r24, 0x25	; 37
 276:	39 f4       	brne	.+14     	; 0x286 <vfprintf+0x4a>
 278:	93 fd       	sbrc	r25, 3
 27a:	85 91       	lpm	r24, Z+
 27c:	93 ff       	sbrs	r25, 3
 27e:	81 91       	ld	r24, Z+
 280:	7f 01       	movw	r14, r30
 282:	85 32       	cpi	r24, 0x25	; 37
 284:	21 f4       	brne	.+8      	; 0x28e <vfprintf+0x52>
 286:	b6 01       	movw	r22, r12
 288:	90 e0       	ldi	r25, 0x00	; 0
 28a:	c0 d1       	rcall	.+896    	; 0x60c <fputc>
 28c:	e8 cf       	rjmp	.-48     	; 0x25e <vfprintf+0x22>
 28e:	91 2c       	mov	r9, r1
 290:	21 2c       	mov	r2, r1
 292:	31 2c       	mov	r3, r1
 294:	ff e1       	ldi	r31, 0x1F	; 31
 296:	f3 15       	cp	r31, r3
 298:	d8 f0       	brcs	.+54     	; 0x2d0 <vfprintf+0x94>
 29a:	8b 32       	cpi	r24, 0x2B	; 43
 29c:	79 f0       	breq	.+30     	; 0x2bc <vfprintf+0x80>
 29e:	38 f4       	brcc	.+14     	; 0x2ae <vfprintf+0x72>
 2a0:	80 32       	cpi	r24, 0x20	; 32
 2a2:	79 f0       	breq	.+30     	; 0x2c2 <vfprintf+0x86>
 2a4:	83 32       	cpi	r24, 0x23	; 35
 2a6:	a1 f4       	brne	.+40     	; 0x2d0 <vfprintf+0x94>
 2a8:	23 2d       	mov	r18, r3
 2aa:	20 61       	ori	r18, 0x10	; 16
 2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <vfprintf+0xac>
 2ae:	8d 32       	cpi	r24, 0x2D	; 45
 2b0:	61 f0       	breq	.+24     	; 0x2ca <vfprintf+0x8e>
 2b2:	80 33       	cpi	r24, 0x30	; 48
 2b4:	69 f4       	brne	.+26     	; 0x2d0 <vfprintf+0x94>
 2b6:	23 2d       	mov	r18, r3
 2b8:	21 60       	ori	r18, 0x01	; 1
 2ba:	16 c0       	rjmp	.+44     	; 0x2e8 <vfprintf+0xac>
 2bc:	83 2d       	mov	r24, r3
 2be:	82 60       	ori	r24, 0x02	; 2
 2c0:	38 2e       	mov	r3, r24
 2c2:	e3 2d       	mov	r30, r3
 2c4:	e4 60       	ori	r30, 0x04	; 4
 2c6:	3e 2e       	mov	r3, r30
 2c8:	2a c0       	rjmp	.+84     	; 0x31e <vfprintf+0xe2>
 2ca:	f3 2d       	mov	r31, r3
 2cc:	f8 60       	ori	r31, 0x08	; 8
 2ce:	1d c0       	rjmp	.+58     	; 0x30a <vfprintf+0xce>
 2d0:	37 fc       	sbrc	r3, 7
 2d2:	2d c0       	rjmp	.+90     	; 0x32e <vfprintf+0xf2>
 2d4:	20 ed       	ldi	r18, 0xD0	; 208
 2d6:	28 0f       	add	r18, r24
 2d8:	2a 30       	cpi	r18, 0x0A	; 10
 2da:	40 f0       	brcs	.+16     	; 0x2ec <vfprintf+0xb0>
 2dc:	8e 32       	cpi	r24, 0x2E	; 46
 2de:	b9 f4       	brne	.+46     	; 0x30e <vfprintf+0xd2>
 2e0:	36 fc       	sbrc	r3, 6
 2e2:	75 c1       	rjmp	.+746    	; 0x5ce <__EEPROM_REGION_LENGTH__+0x1ce>
 2e4:	23 2d       	mov	r18, r3
 2e6:	20 64       	ori	r18, 0x40	; 64
 2e8:	32 2e       	mov	r3, r18
 2ea:	19 c0       	rjmp	.+50     	; 0x31e <vfprintf+0xe2>
 2ec:	36 fe       	sbrs	r3, 6
 2ee:	06 c0       	rjmp	.+12     	; 0x2fc <vfprintf+0xc0>
 2f0:	8a e0       	ldi	r24, 0x0A	; 10
 2f2:	98 9e       	mul	r9, r24
 2f4:	20 0d       	add	r18, r0
 2f6:	11 24       	eor	r1, r1
 2f8:	92 2e       	mov	r9, r18
 2fa:	11 c0       	rjmp	.+34     	; 0x31e <vfprintf+0xe2>
 2fc:	ea e0       	ldi	r30, 0x0A	; 10
 2fe:	2e 9e       	mul	r2, r30
 300:	20 0d       	add	r18, r0
 302:	11 24       	eor	r1, r1
 304:	22 2e       	mov	r2, r18
 306:	f3 2d       	mov	r31, r3
 308:	f0 62       	ori	r31, 0x20	; 32
 30a:	3f 2e       	mov	r3, r31
 30c:	08 c0       	rjmp	.+16     	; 0x31e <vfprintf+0xe2>
 30e:	8c 36       	cpi	r24, 0x6C	; 108
 310:	21 f4       	brne	.+8      	; 0x31a <vfprintf+0xde>
 312:	83 2d       	mov	r24, r3
 314:	80 68       	ori	r24, 0x80	; 128
 316:	38 2e       	mov	r3, r24
 318:	02 c0       	rjmp	.+4      	; 0x31e <vfprintf+0xe2>
 31a:	88 36       	cpi	r24, 0x68	; 104
 31c:	41 f4       	brne	.+16     	; 0x32e <vfprintf+0xf2>
 31e:	f7 01       	movw	r30, r14
 320:	93 fd       	sbrc	r25, 3
 322:	85 91       	lpm	r24, Z+
 324:	93 ff       	sbrs	r25, 3
 326:	81 91       	ld	r24, Z+
 328:	7f 01       	movw	r14, r30
 32a:	81 11       	cpse	r24, r1
 32c:	b3 cf       	rjmp	.-154    	; 0x294 <vfprintf+0x58>
 32e:	98 2f       	mov	r25, r24
 330:	9f 7d       	andi	r25, 0xDF	; 223
 332:	95 54       	subi	r25, 0x45	; 69
 334:	93 30       	cpi	r25, 0x03	; 3
 336:	28 f4       	brcc	.+10     	; 0x342 <vfprintf+0x106>
 338:	0c 5f       	subi	r16, 0xFC	; 252
 33a:	1f 4f       	sbci	r17, 0xFF	; 255
 33c:	9f e3       	ldi	r25, 0x3F	; 63
 33e:	99 83       	std	Y+1, r25	; 0x01
 340:	0d c0       	rjmp	.+26     	; 0x35c <vfprintf+0x120>
 342:	83 36       	cpi	r24, 0x63	; 99
 344:	31 f0       	breq	.+12     	; 0x352 <vfprintf+0x116>
 346:	83 37       	cpi	r24, 0x73	; 115
 348:	71 f0       	breq	.+28     	; 0x366 <vfprintf+0x12a>
 34a:	83 35       	cpi	r24, 0x53	; 83
 34c:	09 f0       	breq	.+2      	; 0x350 <vfprintf+0x114>
 34e:	55 c0       	rjmp	.+170    	; 0x3fa <vfprintf+0x1be>
 350:	20 c0       	rjmp	.+64     	; 0x392 <vfprintf+0x156>
 352:	f8 01       	movw	r30, r16
 354:	80 81       	ld	r24, Z
 356:	89 83       	std	Y+1, r24	; 0x01
 358:	0e 5f       	subi	r16, 0xFE	; 254
 35a:	1f 4f       	sbci	r17, 0xFF	; 255
 35c:	88 24       	eor	r8, r8
 35e:	83 94       	inc	r8
 360:	91 2c       	mov	r9, r1
 362:	53 01       	movw	r10, r6
 364:	12 c0       	rjmp	.+36     	; 0x38a <vfprintf+0x14e>
 366:	28 01       	movw	r4, r16
 368:	f2 e0       	ldi	r31, 0x02	; 2
 36a:	4f 0e       	add	r4, r31
 36c:	51 1c       	adc	r5, r1
 36e:	f8 01       	movw	r30, r16
 370:	a0 80       	ld	r10, Z
 372:	b1 80       	ldd	r11, Z+1	; 0x01
 374:	36 fe       	sbrs	r3, 6
 376:	03 c0       	rjmp	.+6      	; 0x37e <vfprintf+0x142>
 378:	69 2d       	mov	r22, r9
 37a:	70 e0       	ldi	r23, 0x00	; 0
 37c:	02 c0       	rjmp	.+4      	; 0x382 <vfprintf+0x146>
 37e:	6f ef       	ldi	r22, 0xFF	; 255
 380:	7f ef       	ldi	r23, 0xFF	; 255
 382:	c5 01       	movw	r24, r10
 384:	38 d1       	rcall	.+624    	; 0x5f6 <strnlen>
 386:	4c 01       	movw	r8, r24
 388:	82 01       	movw	r16, r4
 38a:	f3 2d       	mov	r31, r3
 38c:	ff 77       	andi	r31, 0x7F	; 127
 38e:	3f 2e       	mov	r3, r31
 390:	15 c0       	rjmp	.+42     	; 0x3bc <vfprintf+0x180>
 392:	28 01       	movw	r4, r16
 394:	22 e0       	ldi	r18, 0x02	; 2
 396:	42 0e       	add	r4, r18
 398:	51 1c       	adc	r5, r1
 39a:	f8 01       	movw	r30, r16
 39c:	a0 80       	ld	r10, Z
 39e:	b1 80       	ldd	r11, Z+1	; 0x01
 3a0:	36 fe       	sbrs	r3, 6
 3a2:	03 c0       	rjmp	.+6      	; 0x3aa <vfprintf+0x16e>
 3a4:	69 2d       	mov	r22, r9
 3a6:	70 e0       	ldi	r23, 0x00	; 0
 3a8:	02 c0       	rjmp	.+4      	; 0x3ae <vfprintf+0x172>
 3aa:	6f ef       	ldi	r22, 0xFF	; 255
 3ac:	7f ef       	ldi	r23, 0xFF	; 255
 3ae:	c5 01       	movw	r24, r10
 3b0:	17 d1       	rcall	.+558    	; 0x5e0 <strnlen_P>
 3b2:	4c 01       	movw	r8, r24
 3b4:	f3 2d       	mov	r31, r3
 3b6:	f0 68       	ori	r31, 0x80	; 128
 3b8:	3f 2e       	mov	r3, r31
 3ba:	82 01       	movw	r16, r4
 3bc:	33 fc       	sbrc	r3, 3
 3be:	19 c0       	rjmp	.+50     	; 0x3f2 <vfprintf+0x1b6>
 3c0:	82 2d       	mov	r24, r2
 3c2:	90 e0       	ldi	r25, 0x00	; 0
 3c4:	88 16       	cp	r8, r24
 3c6:	99 06       	cpc	r9, r25
 3c8:	a0 f4       	brcc	.+40     	; 0x3f2 <vfprintf+0x1b6>
 3ca:	b6 01       	movw	r22, r12
 3cc:	80 e2       	ldi	r24, 0x20	; 32
 3ce:	90 e0       	ldi	r25, 0x00	; 0
 3d0:	1d d1       	rcall	.+570    	; 0x60c <fputc>
 3d2:	2a 94       	dec	r2
 3d4:	f5 cf       	rjmp	.-22     	; 0x3c0 <vfprintf+0x184>
 3d6:	f5 01       	movw	r30, r10
 3d8:	37 fc       	sbrc	r3, 7
 3da:	85 91       	lpm	r24, Z+
 3dc:	37 fe       	sbrs	r3, 7
 3de:	81 91       	ld	r24, Z+
 3e0:	5f 01       	movw	r10, r30
 3e2:	b6 01       	movw	r22, r12
 3e4:	90 e0       	ldi	r25, 0x00	; 0
 3e6:	12 d1       	rcall	.+548    	; 0x60c <fputc>
 3e8:	21 10       	cpse	r2, r1
 3ea:	2a 94       	dec	r2
 3ec:	21 e0       	ldi	r18, 0x01	; 1
 3ee:	82 1a       	sub	r8, r18
 3f0:	91 08       	sbc	r9, r1
 3f2:	81 14       	cp	r8, r1
 3f4:	91 04       	cpc	r9, r1
 3f6:	79 f7       	brne	.-34     	; 0x3d6 <vfprintf+0x19a>
 3f8:	e1 c0       	rjmp	.+450    	; 0x5bc <__EEPROM_REGION_LENGTH__+0x1bc>
 3fa:	84 36       	cpi	r24, 0x64	; 100
 3fc:	11 f0       	breq	.+4      	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
 3fe:	89 36       	cpi	r24, 0x69	; 105
 400:	39 f5       	brne	.+78     	; 0x450 <__EEPROM_REGION_LENGTH__+0x50>
 402:	f8 01       	movw	r30, r16
 404:	37 fe       	sbrs	r3, 7
 406:	07 c0       	rjmp	.+14     	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
 408:	60 81       	ld	r22, Z
 40a:	71 81       	ldd	r23, Z+1	; 0x01
 40c:	82 81       	ldd	r24, Z+2	; 0x02
 40e:	93 81       	ldd	r25, Z+3	; 0x03
 410:	0c 5f       	subi	r16, 0xFC	; 252
 412:	1f 4f       	sbci	r17, 0xFF	; 255
 414:	08 c0       	rjmp	.+16     	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
 416:	60 81       	ld	r22, Z
 418:	71 81       	ldd	r23, Z+1	; 0x01
 41a:	07 2e       	mov	r0, r23
 41c:	00 0c       	add	r0, r0
 41e:	88 0b       	sbc	r24, r24
 420:	99 0b       	sbc	r25, r25
 422:	0e 5f       	subi	r16, 0xFE	; 254
 424:	1f 4f       	sbci	r17, 0xFF	; 255
 426:	f3 2d       	mov	r31, r3
 428:	ff 76       	andi	r31, 0x6F	; 111
 42a:	3f 2e       	mov	r3, r31
 42c:	97 ff       	sbrs	r25, 7
 42e:	09 c0       	rjmp	.+18     	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
 430:	90 95       	com	r25
 432:	80 95       	com	r24
 434:	70 95       	com	r23
 436:	61 95       	neg	r22
 438:	7f 4f       	sbci	r23, 0xFF	; 255
 43a:	8f 4f       	sbci	r24, 0xFF	; 255
 43c:	9f 4f       	sbci	r25, 0xFF	; 255
 43e:	f0 68       	ori	r31, 0x80	; 128
 440:	3f 2e       	mov	r3, r31
 442:	2a e0       	ldi	r18, 0x0A	; 10
 444:	30 e0       	ldi	r19, 0x00	; 0
 446:	a3 01       	movw	r20, r6
 448:	1d d1       	rcall	.+570    	; 0x684 <__ultoa_invert>
 44a:	88 2e       	mov	r8, r24
 44c:	86 18       	sub	r8, r6
 44e:	44 c0       	rjmp	.+136    	; 0x4d8 <__EEPROM_REGION_LENGTH__+0xd8>
 450:	85 37       	cpi	r24, 0x75	; 117
 452:	31 f4       	brne	.+12     	; 0x460 <__EEPROM_REGION_LENGTH__+0x60>
 454:	23 2d       	mov	r18, r3
 456:	2f 7e       	andi	r18, 0xEF	; 239
 458:	b2 2e       	mov	r11, r18
 45a:	2a e0       	ldi	r18, 0x0A	; 10
 45c:	30 e0       	ldi	r19, 0x00	; 0
 45e:	25 c0       	rjmp	.+74     	; 0x4aa <__EEPROM_REGION_LENGTH__+0xaa>
 460:	93 2d       	mov	r25, r3
 462:	99 7f       	andi	r25, 0xF9	; 249
 464:	b9 2e       	mov	r11, r25
 466:	8f 36       	cpi	r24, 0x6F	; 111
 468:	c1 f0       	breq	.+48     	; 0x49a <__EEPROM_REGION_LENGTH__+0x9a>
 46a:	18 f4       	brcc	.+6      	; 0x472 <__EEPROM_REGION_LENGTH__+0x72>
 46c:	88 35       	cpi	r24, 0x58	; 88
 46e:	79 f0       	breq	.+30     	; 0x48e <__EEPROM_REGION_LENGTH__+0x8e>
 470:	ae c0       	rjmp	.+348    	; 0x5ce <__EEPROM_REGION_LENGTH__+0x1ce>
 472:	80 37       	cpi	r24, 0x70	; 112
 474:	19 f0       	breq	.+6      	; 0x47c <__EEPROM_REGION_LENGTH__+0x7c>
 476:	88 37       	cpi	r24, 0x78	; 120
 478:	21 f0       	breq	.+8      	; 0x482 <__EEPROM_REGION_LENGTH__+0x82>
 47a:	a9 c0       	rjmp	.+338    	; 0x5ce <__EEPROM_REGION_LENGTH__+0x1ce>
 47c:	e9 2f       	mov	r30, r25
 47e:	e0 61       	ori	r30, 0x10	; 16
 480:	be 2e       	mov	r11, r30
 482:	b4 fe       	sbrs	r11, 4
 484:	0d c0       	rjmp	.+26     	; 0x4a0 <__EEPROM_REGION_LENGTH__+0xa0>
 486:	fb 2d       	mov	r31, r11
 488:	f4 60       	ori	r31, 0x04	; 4
 48a:	bf 2e       	mov	r11, r31
 48c:	09 c0       	rjmp	.+18     	; 0x4a0 <__EEPROM_REGION_LENGTH__+0xa0>
 48e:	34 fe       	sbrs	r3, 4
 490:	0a c0       	rjmp	.+20     	; 0x4a6 <__EEPROM_REGION_LENGTH__+0xa6>
 492:	29 2f       	mov	r18, r25
 494:	26 60       	ori	r18, 0x06	; 6
 496:	b2 2e       	mov	r11, r18
 498:	06 c0       	rjmp	.+12     	; 0x4a6 <__EEPROM_REGION_LENGTH__+0xa6>
 49a:	28 e0       	ldi	r18, 0x08	; 8
 49c:	30 e0       	ldi	r19, 0x00	; 0
 49e:	05 c0       	rjmp	.+10     	; 0x4aa <__EEPROM_REGION_LENGTH__+0xaa>
 4a0:	20 e1       	ldi	r18, 0x10	; 16
 4a2:	30 e0       	ldi	r19, 0x00	; 0
 4a4:	02 c0       	rjmp	.+4      	; 0x4aa <__EEPROM_REGION_LENGTH__+0xaa>
 4a6:	20 e1       	ldi	r18, 0x10	; 16
 4a8:	32 e0       	ldi	r19, 0x02	; 2
 4aa:	f8 01       	movw	r30, r16
 4ac:	b7 fe       	sbrs	r11, 7
 4ae:	07 c0       	rjmp	.+14     	; 0x4be <__EEPROM_REGION_LENGTH__+0xbe>
 4b0:	60 81       	ld	r22, Z
 4b2:	71 81       	ldd	r23, Z+1	; 0x01
 4b4:	82 81       	ldd	r24, Z+2	; 0x02
 4b6:	93 81       	ldd	r25, Z+3	; 0x03
 4b8:	0c 5f       	subi	r16, 0xFC	; 252
 4ba:	1f 4f       	sbci	r17, 0xFF	; 255
 4bc:	06 c0       	rjmp	.+12     	; 0x4ca <__EEPROM_REGION_LENGTH__+0xca>
 4be:	60 81       	ld	r22, Z
 4c0:	71 81       	ldd	r23, Z+1	; 0x01
 4c2:	80 e0       	ldi	r24, 0x00	; 0
 4c4:	90 e0       	ldi	r25, 0x00	; 0
 4c6:	0e 5f       	subi	r16, 0xFE	; 254
 4c8:	1f 4f       	sbci	r17, 0xFF	; 255
 4ca:	a3 01       	movw	r20, r6
 4cc:	db d0       	rcall	.+438    	; 0x684 <__ultoa_invert>
 4ce:	88 2e       	mov	r8, r24
 4d0:	86 18       	sub	r8, r6
 4d2:	fb 2d       	mov	r31, r11
 4d4:	ff 77       	andi	r31, 0x7F	; 127
 4d6:	3f 2e       	mov	r3, r31
 4d8:	36 fe       	sbrs	r3, 6
 4da:	0d c0       	rjmp	.+26     	; 0x4f6 <__EEPROM_REGION_LENGTH__+0xf6>
 4dc:	23 2d       	mov	r18, r3
 4de:	2e 7f       	andi	r18, 0xFE	; 254
 4e0:	a2 2e       	mov	r10, r18
 4e2:	89 14       	cp	r8, r9
 4e4:	58 f4       	brcc	.+22     	; 0x4fc <__EEPROM_REGION_LENGTH__+0xfc>
 4e6:	34 fe       	sbrs	r3, 4
 4e8:	0b c0       	rjmp	.+22     	; 0x500 <__EEPROM_REGION_LENGTH__+0x100>
 4ea:	32 fc       	sbrc	r3, 2
 4ec:	09 c0       	rjmp	.+18     	; 0x500 <__EEPROM_REGION_LENGTH__+0x100>
 4ee:	83 2d       	mov	r24, r3
 4f0:	8e 7e       	andi	r24, 0xEE	; 238
 4f2:	a8 2e       	mov	r10, r24
 4f4:	05 c0       	rjmp	.+10     	; 0x500 <__EEPROM_REGION_LENGTH__+0x100>
 4f6:	b8 2c       	mov	r11, r8
 4f8:	a3 2c       	mov	r10, r3
 4fa:	03 c0       	rjmp	.+6      	; 0x502 <__EEPROM_REGION_LENGTH__+0x102>
 4fc:	b8 2c       	mov	r11, r8
 4fe:	01 c0       	rjmp	.+2      	; 0x502 <__EEPROM_REGION_LENGTH__+0x102>
 500:	b9 2c       	mov	r11, r9
 502:	a4 fe       	sbrs	r10, 4
 504:	0f c0       	rjmp	.+30     	; 0x524 <__EEPROM_REGION_LENGTH__+0x124>
 506:	fe 01       	movw	r30, r28
 508:	e8 0d       	add	r30, r8
 50a:	f1 1d       	adc	r31, r1
 50c:	80 81       	ld	r24, Z
 50e:	80 33       	cpi	r24, 0x30	; 48
 510:	21 f4       	brne	.+8      	; 0x51a <__EEPROM_REGION_LENGTH__+0x11a>
 512:	9a 2d       	mov	r25, r10
 514:	99 7e       	andi	r25, 0xE9	; 233
 516:	a9 2e       	mov	r10, r25
 518:	09 c0       	rjmp	.+18     	; 0x52c <__EEPROM_REGION_LENGTH__+0x12c>
 51a:	a2 fe       	sbrs	r10, 2
 51c:	06 c0       	rjmp	.+12     	; 0x52a <__EEPROM_REGION_LENGTH__+0x12a>
 51e:	b3 94       	inc	r11
 520:	b3 94       	inc	r11
 522:	04 c0       	rjmp	.+8      	; 0x52c <__EEPROM_REGION_LENGTH__+0x12c>
 524:	8a 2d       	mov	r24, r10
 526:	86 78       	andi	r24, 0x86	; 134
 528:	09 f0       	breq	.+2      	; 0x52c <__EEPROM_REGION_LENGTH__+0x12c>
 52a:	b3 94       	inc	r11
 52c:	a3 fc       	sbrc	r10, 3
 52e:	10 c0       	rjmp	.+32     	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
 530:	a0 fe       	sbrs	r10, 0
 532:	06 c0       	rjmp	.+12     	; 0x540 <__EEPROM_REGION_LENGTH__+0x140>
 534:	b2 14       	cp	r11, r2
 536:	80 f4       	brcc	.+32     	; 0x558 <__EEPROM_REGION_LENGTH__+0x158>
 538:	28 0c       	add	r2, r8
 53a:	92 2c       	mov	r9, r2
 53c:	9b 18       	sub	r9, r11
 53e:	0d c0       	rjmp	.+26     	; 0x55a <__EEPROM_REGION_LENGTH__+0x15a>
 540:	b2 14       	cp	r11, r2
 542:	58 f4       	brcc	.+22     	; 0x55a <__EEPROM_REGION_LENGTH__+0x15a>
 544:	b6 01       	movw	r22, r12
 546:	80 e2       	ldi	r24, 0x20	; 32
 548:	90 e0       	ldi	r25, 0x00	; 0
 54a:	60 d0       	rcall	.+192    	; 0x60c <fputc>
 54c:	b3 94       	inc	r11
 54e:	f8 cf       	rjmp	.-16     	; 0x540 <__EEPROM_REGION_LENGTH__+0x140>
 550:	b2 14       	cp	r11, r2
 552:	18 f4       	brcc	.+6      	; 0x55a <__EEPROM_REGION_LENGTH__+0x15a>
 554:	2b 18       	sub	r2, r11
 556:	02 c0       	rjmp	.+4      	; 0x55c <__EEPROM_REGION_LENGTH__+0x15c>
 558:	98 2c       	mov	r9, r8
 55a:	21 2c       	mov	r2, r1
 55c:	a4 fe       	sbrs	r10, 4
 55e:	0f c0       	rjmp	.+30     	; 0x57e <__EEPROM_REGION_LENGTH__+0x17e>
 560:	b6 01       	movw	r22, r12
 562:	80 e3       	ldi	r24, 0x30	; 48
 564:	90 e0       	ldi	r25, 0x00	; 0
 566:	52 d0       	rcall	.+164    	; 0x60c <fputc>
 568:	a2 fe       	sbrs	r10, 2
 56a:	16 c0       	rjmp	.+44     	; 0x598 <__EEPROM_REGION_LENGTH__+0x198>
 56c:	a1 fc       	sbrc	r10, 1
 56e:	03 c0       	rjmp	.+6      	; 0x576 <__EEPROM_REGION_LENGTH__+0x176>
 570:	88 e7       	ldi	r24, 0x78	; 120
 572:	90 e0       	ldi	r25, 0x00	; 0
 574:	02 c0       	rjmp	.+4      	; 0x57a <__EEPROM_REGION_LENGTH__+0x17a>
 576:	88 e5       	ldi	r24, 0x58	; 88
 578:	90 e0       	ldi	r25, 0x00	; 0
 57a:	b6 01       	movw	r22, r12
 57c:	0c c0       	rjmp	.+24     	; 0x596 <__EEPROM_REGION_LENGTH__+0x196>
 57e:	8a 2d       	mov	r24, r10
 580:	86 78       	andi	r24, 0x86	; 134
 582:	51 f0       	breq	.+20     	; 0x598 <__EEPROM_REGION_LENGTH__+0x198>
 584:	a1 fe       	sbrs	r10, 1
 586:	02 c0       	rjmp	.+4      	; 0x58c <__EEPROM_REGION_LENGTH__+0x18c>
 588:	8b e2       	ldi	r24, 0x2B	; 43
 58a:	01 c0       	rjmp	.+2      	; 0x58e <__EEPROM_REGION_LENGTH__+0x18e>
 58c:	80 e2       	ldi	r24, 0x20	; 32
 58e:	a7 fc       	sbrc	r10, 7
 590:	8d e2       	ldi	r24, 0x2D	; 45
 592:	b6 01       	movw	r22, r12
 594:	90 e0       	ldi	r25, 0x00	; 0
 596:	3a d0       	rcall	.+116    	; 0x60c <fputc>
 598:	89 14       	cp	r8, r9
 59a:	30 f4       	brcc	.+12     	; 0x5a8 <__EEPROM_REGION_LENGTH__+0x1a8>
 59c:	b6 01       	movw	r22, r12
 59e:	80 e3       	ldi	r24, 0x30	; 48
 5a0:	90 e0       	ldi	r25, 0x00	; 0
 5a2:	34 d0       	rcall	.+104    	; 0x60c <fputc>
 5a4:	9a 94       	dec	r9
 5a6:	f8 cf       	rjmp	.-16     	; 0x598 <__EEPROM_REGION_LENGTH__+0x198>
 5a8:	8a 94       	dec	r8
 5aa:	f3 01       	movw	r30, r6
 5ac:	e8 0d       	add	r30, r8
 5ae:	f1 1d       	adc	r31, r1
 5b0:	80 81       	ld	r24, Z
 5b2:	b6 01       	movw	r22, r12
 5b4:	90 e0       	ldi	r25, 0x00	; 0
 5b6:	2a d0       	rcall	.+84     	; 0x60c <fputc>
 5b8:	81 10       	cpse	r8, r1
 5ba:	f6 cf       	rjmp	.-20     	; 0x5a8 <__EEPROM_REGION_LENGTH__+0x1a8>
 5bc:	22 20       	and	r2, r2
 5be:	09 f4       	brne	.+2      	; 0x5c2 <__EEPROM_REGION_LENGTH__+0x1c2>
 5c0:	4e ce       	rjmp	.-868    	; 0x25e <vfprintf+0x22>
 5c2:	b6 01       	movw	r22, r12
 5c4:	80 e2       	ldi	r24, 0x20	; 32
 5c6:	90 e0       	ldi	r25, 0x00	; 0
 5c8:	21 d0       	rcall	.+66     	; 0x60c <fputc>
 5ca:	2a 94       	dec	r2
 5cc:	f7 cf       	rjmp	.-18     	; 0x5bc <__EEPROM_REGION_LENGTH__+0x1bc>
 5ce:	f6 01       	movw	r30, r12
 5d0:	86 81       	ldd	r24, Z+6	; 0x06
 5d2:	97 81       	ldd	r25, Z+7	; 0x07
 5d4:	02 c0       	rjmp	.+4      	; 0x5da <__EEPROM_REGION_LENGTH__+0x1da>
 5d6:	8f ef       	ldi	r24, 0xFF	; 255
 5d8:	9f ef       	ldi	r25, 0xFF	; 255
 5da:	2b 96       	adiw	r28, 0x0b	; 11
 5dc:	e2 e1       	ldi	r30, 0x12	; 18
 5de:	cc c0       	rjmp	.+408    	; 0x778 <__epilogue_restores__>

000005e0 <strnlen_P>:
 5e0:	fc 01       	movw	r30, r24
 5e2:	05 90       	lpm	r0, Z+
 5e4:	61 50       	subi	r22, 0x01	; 1
 5e6:	70 40       	sbci	r23, 0x00	; 0
 5e8:	01 10       	cpse	r0, r1
 5ea:	d8 f7       	brcc	.-10     	; 0x5e2 <strnlen_P+0x2>
 5ec:	80 95       	com	r24
 5ee:	90 95       	com	r25
 5f0:	8e 0f       	add	r24, r30
 5f2:	9f 1f       	adc	r25, r31
 5f4:	08 95       	ret

000005f6 <strnlen>:
 5f6:	fc 01       	movw	r30, r24
 5f8:	61 50       	subi	r22, 0x01	; 1
 5fa:	70 40       	sbci	r23, 0x00	; 0
 5fc:	01 90       	ld	r0, Z+
 5fe:	01 10       	cpse	r0, r1
 600:	d8 f7       	brcc	.-10     	; 0x5f8 <strnlen+0x2>
 602:	80 95       	com	r24
 604:	90 95       	com	r25
 606:	8e 0f       	add	r24, r30
 608:	9f 1f       	adc	r25, r31
 60a:	08 95       	ret

0000060c <fputc>:
 60c:	0f 93       	push	r16
 60e:	1f 93       	push	r17
 610:	cf 93       	push	r28
 612:	df 93       	push	r29
 614:	fb 01       	movw	r30, r22
 616:	23 81       	ldd	r18, Z+3	; 0x03
 618:	21 fd       	sbrc	r18, 1
 61a:	03 c0       	rjmp	.+6      	; 0x622 <fputc+0x16>
 61c:	8f ef       	ldi	r24, 0xFF	; 255
 61e:	9f ef       	ldi	r25, 0xFF	; 255
 620:	2c c0       	rjmp	.+88     	; 0x67a <fputc+0x6e>
 622:	22 ff       	sbrs	r18, 2
 624:	16 c0       	rjmp	.+44     	; 0x652 <fputc+0x46>
 626:	46 81       	ldd	r20, Z+6	; 0x06
 628:	57 81       	ldd	r21, Z+7	; 0x07
 62a:	24 81       	ldd	r18, Z+4	; 0x04
 62c:	35 81       	ldd	r19, Z+5	; 0x05
 62e:	42 17       	cp	r20, r18
 630:	53 07       	cpc	r21, r19
 632:	44 f4       	brge	.+16     	; 0x644 <fputc+0x38>
 634:	a0 81       	ld	r26, Z
 636:	b1 81       	ldd	r27, Z+1	; 0x01
 638:	9d 01       	movw	r18, r26
 63a:	2f 5f       	subi	r18, 0xFF	; 255
 63c:	3f 4f       	sbci	r19, 0xFF	; 255
 63e:	31 83       	std	Z+1, r19	; 0x01
 640:	20 83       	st	Z, r18
 642:	8c 93       	st	X, r24
 644:	26 81       	ldd	r18, Z+6	; 0x06
 646:	37 81       	ldd	r19, Z+7	; 0x07
 648:	2f 5f       	subi	r18, 0xFF	; 255
 64a:	3f 4f       	sbci	r19, 0xFF	; 255
 64c:	37 83       	std	Z+7, r19	; 0x07
 64e:	26 83       	std	Z+6, r18	; 0x06
 650:	14 c0       	rjmp	.+40     	; 0x67a <fputc+0x6e>
 652:	8b 01       	movw	r16, r22
 654:	ec 01       	movw	r28, r24
 656:	fb 01       	movw	r30, r22
 658:	00 84       	ldd	r0, Z+8	; 0x08
 65a:	f1 85       	ldd	r31, Z+9	; 0x09
 65c:	e0 2d       	mov	r30, r0
 65e:	09 95       	icall
 660:	89 2b       	or	r24, r25
 662:	e1 f6       	brne	.-72     	; 0x61c <fputc+0x10>
 664:	d8 01       	movw	r26, r16
 666:	16 96       	adiw	r26, 0x06	; 6
 668:	8d 91       	ld	r24, X+
 66a:	9c 91       	ld	r25, X
 66c:	17 97       	sbiw	r26, 0x07	; 7
 66e:	01 96       	adiw	r24, 0x01	; 1
 670:	17 96       	adiw	r26, 0x07	; 7
 672:	9c 93       	st	X, r25
 674:	8e 93       	st	-X, r24
 676:	16 97       	sbiw	r26, 0x06	; 6
 678:	ce 01       	movw	r24, r28
 67a:	df 91       	pop	r29
 67c:	cf 91       	pop	r28
 67e:	1f 91       	pop	r17
 680:	0f 91       	pop	r16
 682:	08 95       	ret

00000684 <__ultoa_invert>:
 684:	fa 01       	movw	r30, r20
 686:	aa 27       	eor	r26, r26
 688:	28 30       	cpi	r18, 0x08	; 8
 68a:	51 f1       	breq	.+84     	; 0x6e0 <__ultoa_invert+0x5c>
 68c:	20 31       	cpi	r18, 0x10	; 16
 68e:	81 f1       	breq	.+96     	; 0x6f0 <__ultoa_invert+0x6c>
 690:	e8 94       	clt
 692:	6f 93       	push	r22
 694:	6e 7f       	andi	r22, 0xFE	; 254
 696:	6e 5f       	subi	r22, 0xFE	; 254
 698:	7f 4f       	sbci	r23, 0xFF	; 255
 69a:	8f 4f       	sbci	r24, 0xFF	; 255
 69c:	9f 4f       	sbci	r25, 0xFF	; 255
 69e:	af 4f       	sbci	r26, 0xFF	; 255
 6a0:	b1 e0       	ldi	r27, 0x01	; 1
 6a2:	3e d0       	rcall	.+124    	; 0x720 <__ultoa_invert+0x9c>
 6a4:	b4 e0       	ldi	r27, 0x04	; 4
 6a6:	3c d0       	rcall	.+120    	; 0x720 <__ultoa_invert+0x9c>
 6a8:	67 0f       	add	r22, r23
 6aa:	78 1f       	adc	r23, r24
 6ac:	89 1f       	adc	r24, r25
 6ae:	9a 1f       	adc	r25, r26
 6b0:	a1 1d       	adc	r26, r1
 6b2:	68 0f       	add	r22, r24
 6b4:	79 1f       	adc	r23, r25
 6b6:	8a 1f       	adc	r24, r26
 6b8:	91 1d       	adc	r25, r1
 6ba:	a1 1d       	adc	r26, r1
 6bc:	6a 0f       	add	r22, r26
 6be:	71 1d       	adc	r23, r1
 6c0:	81 1d       	adc	r24, r1
 6c2:	91 1d       	adc	r25, r1
 6c4:	a1 1d       	adc	r26, r1
 6c6:	20 d0       	rcall	.+64     	; 0x708 <__ultoa_invert+0x84>
 6c8:	09 f4       	brne	.+2      	; 0x6cc <__ultoa_invert+0x48>
 6ca:	68 94       	set
 6cc:	3f 91       	pop	r19
 6ce:	2a e0       	ldi	r18, 0x0A	; 10
 6d0:	26 9f       	mul	r18, r22
 6d2:	11 24       	eor	r1, r1
 6d4:	30 19       	sub	r19, r0
 6d6:	30 5d       	subi	r19, 0xD0	; 208
 6d8:	31 93       	st	Z+, r19
 6da:	de f6       	brtc	.-74     	; 0x692 <__ultoa_invert+0xe>
 6dc:	cf 01       	movw	r24, r30
 6de:	08 95       	ret
 6e0:	46 2f       	mov	r20, r22
 6e2:	47 70       	andi	r20, 0x07	; 7
 6e4:	40 5d       	subi	r20, 0xD0	; 208
 6e6:	41 93       	st	Z+, r20
 6e8:	b3 e0       	ldi	r27, 0x03	; 3
 6ea:	0f d0       	rcall	.+30     	; 0x70a <__ultoa_invert+0x86>
 6ec:	c9 f7       	brne	.-14     	; 0x6e0 <__ultoa_invert+0x5c>
 6ee:	f6 cf       	rjmp	.-20     	; 0x6dc <__ultoa_invert+0x58>
 6f0:	46 2f       	mov	r20, r22
 6f2:	4f 70       	andi	r20, 0x0F	; 15
 6f4:	40 5d       	subi	r20, 0xD0	; 208
 6f6:	4a 33       	cpi	r20, 0x3A	; 58
 6f8:	18 f0       	brcs	.+6      	; 0x700 <__ultoa_invert+0x7c>
 6fa:	49 5d       	subi	r20, 0xD9	; 217
 6fc:	31 fd       	sbrc	r19, 1
 6fe:	40 52       	subi	r20, 0x20	; 32
 700:	41 93       	st	Z+, r20
 702:	02 d0       	rcall	.+4      	; 0x708 <__ultoa_invert+0x84>
 704:	a9 f7       	brne	.-22     	; 0x6f0 <__ultoa_invert+0x6c>
 706:	ea cf       	rjmp	.-44     	; 0x6dc <__ultoa_invert+0x58>
 708:	b4 e0       	ldi	r27, 0x04	; 4
 70a:	a6 95       	lsr	r26
 70c:	97 95       	ror	r25
 70e:	87 95       	ror	r24
 710:	77 95       	ror	r23
 712:	67 95       	ror	r22
 714:	ba 95       	dec	r27
 716:	c9 f7       	brne	.-14     	; 0x70a <__ultoa_invert+0x86>
 718:	00 97       	sbiw	r24, 0x00	; 0
 71a:	61 05       	cpc	r22, r1
 71c:	71 05       	cpc	r23, r1
 71e:	08 95       	ret
 720:	9b 01       	movw	r18, r22
 722:	ac 01       	movw	r20, r24
 724:	0a 2e       	mov	r0, r26
 726:	06 94       	lsr	r0
 728:	57 95       	ror	r21
 72a:	47 95       	ror	r20
 72c:	37 95       	ror	r19
 72e:	27 95       	ror	r18
 730:	ba 95       	dec	r27
 732:	c9 f7       	brne	.-14     	; 0x726 <__ultoa_invert+0xa2>
 734:	62 0f       	add	r22, r18
 736:	73 1f       	adc	r23, r19
 738:	84 1f       	adc	r24, r20
 73a:	95 1f       	adc	r25, r21
 73c:	a0 1d       	adc	r26, r0
 73e:	08 95       	ret

00000740 <__prologue_saves__>:
 740:	2f 92       	push	r2
 742:	3f 92       	push	r3
 744:	4f 92       	push	r4
 746:	5f 92       	push	r5
 748:	6f 92       	push	r6
 74a:	7f 92       	push	r7
 74c:	8f 92       	push	r8
 74e:	9f 92       	push	r9
 750:	af 92       	push	r10
 752:	bf 92       	push	r11
 754:	cf 92       	push	r12
 756:	df 92       	push	r13
 758:	ef 92       	push	r14
 75a:	ff 92       	push	r15
 75c:	0f 93       	push	r16
 75e:	1f 93       	push	r17
 760:	cf 93       	push	r28
 762:	df 93       	push	r29
 764:	cd b7       	in	r28, 0x3d	; 61
 766:	de b7       	in	r29, 0x3e	; 62
 768:	ca 1b       	sub	r28, r26
 76a:	db 0b       	sbc	r29, r27
 76c:	0f b6       	in	r0, 0x3f	; 63
 76e:	f8 94       	cli
 770:	de bf       	out	0x3e, r29	; 62
 772:	0f be       	out	0x3f, r0	; 63
 774:	cd bf       	out	0x3d, r28	; 61
 776:	09 94       	ijmp

00000778 <__epilogue_restores__>:
 778:	2a 88       	ldd	r2, Y+18	; 0x12
 77a:	39 88       	ldd	r3, Y+17	; 0x11
 77c:	48 88       	ldd	r4, Y+16	; 0x10
 77e:	5f 84       	ldd	r5, Y+15	; 0x0f
 780:	6e 84       	ldd	r6, Y+14	; 0x0e
 782:	7d 84       	ldd	r7, Y+13	; 0x0d
 784:	8c 84       	ldd	r8, Y+12	; 0x0c
 786:	9b 84       	ldd	r9, Y+11	; 0x0b
 788:	aa 84       	ldd	r10, Y+10	; 0x0a
 78a:	b9 84       	ldd	r11, Y+9	; 0x09
 78c:	c8 84       	ldd	r12, Y+8	; 0x08
 78e:	df 80       	ldd	r13, Y+7	; 0x07
 790:	ee 80       	ldd	r14, Y+6	; 0x06
 792:	fd 80       	ldd	r15, Y+5	; 0x05
 794:	0c 81       	ldd	r16, Y+4	; 0x04
 796:	1b 81       	ldd	r17, Y+3	; 0x03
 798:	aa 81       	ldd	r26, Y+2	; 0x02
 79a:	b9 81       	ldd	r27, Y+1	; 0x01
 79c:	ce 0f       	add	r28, r30
 79e:	d1 1d       	adc	r29, r1
 7a0:	0f b6       	in	r0, 0x3f	; 63
 7a2:	f8 94       	cli
 7a4:	de bf       	out	0x3e, r29	; 62
 7a6:	0f be       	out	0x3f, r0	; 63
 7a8:	cd bf       	out	0x3d, r28	; 61
 7aa:	ed 01       	movw	r28, r26
 7ac:	08 95       	ret

000007ae <_exit>:
 7ae:	f8 94       	cli

000007b0 <__stop_program>:
 7b0:	ff cf       	rjmp	.-2      	; 0x7b0 <__stop_program>
